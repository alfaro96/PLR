name: Continuous deployment wheels

on: pull_request
  # schedule:
  #   - cron: "0 0 * * *"
  # tags:
  #   - "[0-9]+.[0-9]+.[0-9]+"

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
        python:
          - 3.6
          - 3.7
          - 3.8

    env:
      REPO_DIR: scikit-lr
      BUILD_COMMIT: ${{ github.sha }}
      PLAT: x86_64
      BUILD_DEPENDS: "numpy==1.17.3 cython==0.29.14 scipy==1.3.2"
      TEST_DEPENDS: pytest==4.6.4
      MB_PYTHON_VERSION: ${{ matrix.python }}

    steps:
      - name: Checkout scikit-lr
        uses: actions/checkout@v2
        with:
          path: scikit-lr

      - name: Checkout multibuild
        uses: actions/checkout@v2
        with:
          repository: matthew-brett/multibuild
          ref: devel
          path: multibuild

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}

      - name: Copy files
        run: |
          cp $GITHUB_WORKSPACE/scikit-lr/.github/tools/deployment/config.sh $GITHUB_WORKSPACE
          cp $GITHUB_WORKSPACE/scikit-lr/.github/tools/deployment/extra_functions.sh $GITHUB_WORKSPACE

      - name: Show variables
        run: |
          echo $REPO_DIR
          echo $BUILD_COMMIT
          echo $PLAT
          echo $BUILD_DEPENDS
          echo $TEST_DEPENDS
          echo $MB_PYTHON_VERSION

      - name: Source common utils
        run: |
          if [ $(uname | tr "[:upper:]" "[:lower:]") == "darwin" ]; then TRAVIS_OS_NAME=osx; else TRAVIS_OS_NAME=linux; fi
          set -e
          pip install virtualenv
          source multibuild/common_utils.sh
          source multibuild/travis_steps.sh
          source extra_functions.sh
          before_install
          clean_code $REPO_DIR $BUILD_COMMIT
          build_wheel $REPO_DIR $PLAT
 
      - name: Build wheel
        run: |
          if [ $(uname | tr "[:upper:]" "[:lower:]") == "darwin" ]; then TRAVIS_OS_NAME=osx; else TRAVIS_OS_NAME=linux; fi
          set -e
          PYTHON_EXE=`which python`
          source multibuild/common_utils.sh
          source multibuild/travis_steps.sh
          source extra_functions.sh
          setup_test_venv
          install_run $PLAT
          teardown_test_venv
          
      - name: Add conda to path
        run: |
          echo ::add-path::$CONDA/bin

      - name: Install anaconda-client
        run: |
          conda install -q -y anaconda-client
      
      - name: Submit package
        env:
          CONDA_TOKEN: ${{ secrets.CONDA_TOKEN }}
        run: |
          set -e
          ls wheelhouse/*.whl
          anaconda -t $CONDA_TOKEN upload --force -u alfaro96 wheelhouse/*.whl
