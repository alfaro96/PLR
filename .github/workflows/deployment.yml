# Workflow to build and test the wheels and the source distribution
name: Continuous deployment wheels

on:
  schedule:
    # Everyday at 3:42 UTC
    - cron: "42 3 */1 * *"
  push:
    branches:
      - master
      # Release branches
      - "[0-9]+.[0-9]+.X"
  pull_request:
    branches:
      - master
      - "[0-9]+.[0-9]+.X"
  # Manual trigger run
  workflow_dispatch:

jobs:
  build_wheels:
    name: Build and test wheel for ${{ matrix.platform_id }} and cp-${{ matrix.python }}
    runs-on: ${{ matrix.os }}

    strategy:
      # Prevent a failing build job from failing a workflow run
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python: [37, 38, 39]
        bitness: [32, 64]
        include:
          # Run 32-bit and 64-bit versions in parallel
          - os: ubuntu-latest
            bitness: 32
            platform_id: manylinux_i686
          - os: ubuntu-latest
            bitness: 64
            platform_id: manylinux_x86_64
          - os: windows-latest
            bitness: 32
            platform_id: win32
          - os: windows-latest
            bitness: 64
            platform_id: win_amd64
          - os: macos-latest
            bitness: 64
            platform_id: macosx_x86_64
        exclude:
          - os: macos-latest
            bitness: 32

    steps:
      - name: Checkout scikit-lr
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2

      - name: Build and test wheel
        uses: pypa/cibuildwheel@v1.12.0
        env:
          CIBW_BUILD: cp${{ matrix.python }}-${{ matrix.platform_id }}
          CIBW_MANYLINUX_X86_64_IMAGE: manylinux1
          CIBW_MANYLINUX_I686_IMAGE: manylinux1
          CIBW_TEST_COMMAND: bash {project}/.github/tools/deployment/test_wheel.sh
          CIBW_TEST_REQUIRES: pytest
          CIBW_BUILD_VERBOSITY: 1

      - name: Store wheel
        uses: actions/upload-artifact@v2
        with:
          path: wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest

    steps:
      - name: Checkout scikit-lr
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2

      - name: Build source distribution
        run: bash $GITHUB_WORKSPACE/.github/tools/deployment/build_source.sh

      - name: Test source distribution
        run: bash $GITHUB_WORKSPACE/.github/tools/deployment/test_source.sh

      - name: Store source distribution
        uses: actions/upload-artifact@v2
        with:
          path: dist/*.tar.gz

  upload_anaconda:
    name: Upload artifacts to Anaconda
    runs-on: ubuntu-latest
    needs: [build_wheels, build_sdist]
    # Do not upload the artifacts on pull requests
    if: github.event_name != 'pull_request'

    steps:
      - name: Checkout scikit-lr
        uses: actions/checkout@v2

      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          path: dist

      - name: Setup Python
        uses: actions/setup-python@v2

      - name: Upload artifacts
        run: bash $GITHUB_WORKSPACE/build_tools/github/upload_anaconda.sh
        env:
          ANACONDA_TOKEN: ${{ secrets.ANACONDA_TOKEN }}
